import React, { useState, useEffect } from "react";
import Paper from '@material-ui/core/Paper';
import Container from '@material-ui/core/Container';
import Tabs from "pages/MainPage/Tabs/Tabs.js";
import UserInfo from "pages/UserPage/UserInfo.js";
import { withRouter } from "react-router-dom";
import { projectDB } from "firebaseConfig/firebaseConfig.js";
import Loader from "components/Loader/Loader.js";
import LangsTranslate from "LangsTranslate/LangsTranslate.json";

const UserPage = ({ currentLang, setIsLogin, isLogin, ...props }) => {
  const userId = props.match.params.id;
  const [userInfo, setUserInfo] = useState("");
  const [isLoading, setIsLoading] = useState(true);
  const userInfoTranslate = LangsTranslate[currentLang].userPage.userInfo;

  const [publicationsAmount, setPublicationsAmount] = useState(0);

  useEffect(() => {
    projectDB.ref('users/' + userId).on('value', (snapshot) => {
      setIsLoading(false);
      const data = snapshot.val();
      if (!data) return;
      setUserInfo({ name: data.username, photo: data.userphoto, bio: data.userbio });
    });
    projectDB.ref(`users/${userId}/articlesref`).on('value', (snapshot) => {
      if (snapshot.val()) setPublicationsAmount(snapshot.numChildren());
    });
  }, [userId]);
  useEffect(() => (() => setUserInfo(null)), []);

  return (
    <Container style={{ maxWidth: "980px" }}>
      {isLoading ?
        <div style={{ padding: "100px 0px 0px" }}>
          <Paper style={{ padding: "20px", display: "flex", alignItems: "center", justifyContent: "center" }}>
            <Loader color="primary" />
          </Paper>
        </div> :
        userInfo ?
          <div style={{ padding: "100px 0px 0px" }}>
            <Paper>
              <UserInfo
                setIsLogin={setIsLogin}
                isLogin={isLogin}
                currentLang={currentLang}
                userInfo={userInfo}
                setUserInfo={setUserInfo}
                publicationsAmount={publicationsAmount}
              />
              <Tabs currentPage="userPage" currentLang={currentLang} />
            </Paper>
          </div> :
          <div style={{ padding: "100px 0px 0px" }}>
            <Paper style={{ padding: "20px", display: "flex", alignItems: "center", justifyContent: "center" }}>
              {userInfoTranslate.notFound}
            </Paper>
          </div>
      }
    </Container>
  )
}

export default withRouter(UserPage);