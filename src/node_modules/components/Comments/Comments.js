import React, { useRef } from 'react';
import Comment from "components/Comments/Comment.js";
import CommentNew from "components/Comments/CommentNew.js";
import { projectDB } from "firebaseConfig/firebaseConfig.js";

const Comments = ({ currentLang, articleId, feedComments, setFeedComments, articleOwnerId }) => {
  const isSubmiting = useRef(false);
  const addNewComment = (e, commentText, setIsError, textFieldRef, setCommentText) => {
    e.preventDefault();
    if (commentText.trim().length === 0) {
      setIsError(true);
      return;
    }
    if (isSubmiting.current) return;
    isSubmiting.current = true;
    const timestamp = Date.now();
    const comment = {
      commentText: commentText.trim(),
      owner: localStorage.getItem("currentUserId"),
    }
    projectDB.ref('articles/' + articleId + "/" + "comments/" + timestamp).set(comment)
      .then(() => {
        setCommentText("");
        textFieldRef.current.focus();
        setFeedComments(prevState => ({
          ...prevState,
          [timestamp]: comment,
        }))
      })
  }
  const deleteCommentHandler = (commentId) => {
    projectDB.ref(`articles/${articleId}/comments/${commentId}`)
      .remove()
      .then(() => setFeedComments(comments => {
        const newCommentsObj = {};
        for (let i in comments) {
          if (i === commentId) continue;
          newCommentsObj[i] = comments[i];
        }
        return newCommentsObj;
      })
      )
  }

  return (
    <div style={{ display: "grid", gap: "10px" }}>
      <CommentNew currentLang={currentLang} addNewComment={addNewComment} />
      {Object.entries(feedComments).reverse().map(comment => {
        return (
          <Comment
            key={comment[0]}
            commentText={comment[1].commentText}
            dislikes={comment[1].disliked || {}}
            likes={comment[1].liked || {}}
            owner={comment[1].owner}
            articleId={articleId}
            publishedDate={comment[0]}
            deleteCommentHandler={deleteCommentHandler}
            articleOwnerId={articleOwnerId}
            currentLang={currentLang}
          />
        )
      })}
    </div>
  );
}

export default Comments;